import asyncio
import random

from telegram import Update
from telegram.ext import ContextTypes

from miata.handlers.send import send_ad
from miata.parser import get_from_bazaraki

def randompost_command(redis_client):
    async def handler(update: Update, context: ContextTypes.DEFAULT_TYPE):
        posts = redis_client.get_posts()
        if not posts:
            await update.message.reply_text("üì≠ –ü–æ–∫–∞ –Ω–µ—Ç —Å–æ—Ö—Ä–∞–Ω—ë–Ω–Ω—ã—Ö –ø–æ—Å—Ç–æ–≤.")
            return
        post = random.choice(posts)
        await update.message.reply_text(post, disable_notification=True)

    return handler

def randomfact_command(gpt_model):
    async def handler(update: Update, context: ContextTypes.DEFAULT_TYPE):
        fact = gpt_model.evaluate()
        await update.message.reply_text(fact, parse_mode="Markdown")

    return handler

async def available_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("üîç –ü–æ–¥–æ–∂–¥–∏ –Ω–µ–º–Ω–æ–≥–æ, –∏—â—É –æ–±—ä—è–≤–ª–µ–Ω–∏—è...")
    ads = get_from_bazaraki()
    if not ads:
        await update.message.reply_text("üö´ –û–±—ä—è–≤–ª–µ–Ω–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω—ã.")
        return
    for title, link in ads:
        await send_ad(context.bot, title, link, update.message.chat_id)
        await asyncio.sleep(1)
